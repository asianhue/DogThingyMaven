# Trigger for pipeline
trigger:
  branches:
    include:
      - test

# vmImage
pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: DogThingyMaven
      type: github
      name: asianhue/DogThingyMaven
      ref: main
      endpoint: asianhue

stages:
- stage: Test
  displayName: Test
  jobs:
    - job: test_code
      displayName: Test
      steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'plinko/pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '11'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'package'
        - task: Maven@4
          inputs:
            mavenPomFile: 'plinko/pom.xml'
            goals: 'test'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

- stage: PushToMain
  displayName: Push to Main
  jobs:
    - job: MergeAndPush
      displayName: Merge and Push to Main
      dependsOn: test_code
      condition: succeeded('test_code')
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self
          persistCredentials: true
          clean: true

        # Authorize Github Credentials
        - script: |
            git config --global user.email "kenneth5982@gmail.com" && git config --global user.name "asianhue"
          displayName: Set Git User Information

        # Switch to the main branch
        - script: |
            git fetch --prune --unshallow
            git checkout origin/main
          displayName: Switch to Main Branch

        # Merge the test branch into the main branch
        - script: |
            git merge origin/test
          displayName: Merge Test Branch

        # Push the changes to the main branch
        - script: |
            git push origin HEAD:main
          displayName: Push to Main

- stage: DeployToEnvironment
  displayName: Deploy To Environment
  jobs:
    - deployment: deploy
      displayName: Deploy
      environment: Development
      strategy:
        runOnce:
          deploy:
            steps:
              - script: echo This is a DEPLOYMENT job
                displayName: 'Deploy Project'
